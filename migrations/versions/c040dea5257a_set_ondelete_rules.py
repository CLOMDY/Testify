"""Set ondelete rules

Revision ID: c040dea5257a
Revises: 
Create Date: 2025-09-16 11:20:03.814973

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c040dea5257a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_table')
    with op.batch_alter_table('exams', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('exams_created_by_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('results', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('results_exam_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('results_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'exams', ['exam_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('results', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('results_user_id_fkey'), 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('results_exam_id_fkey'), 'exams', ['exam_id'], ['id'])
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('exams', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('exams_created_by_fkey'), 'users', ['created_by'], ['id'])

    op.create_table('test_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('test_table_pkey'))
    )
    # ### end Alembic commands ###
